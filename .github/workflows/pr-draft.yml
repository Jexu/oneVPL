---
name: Smoke

on:
  # Run on pull requests
  pull_request:
  # Run on user request
  workflow_dispatch:

concurrency:
  # Cancel any existing jobs related to the target branch
  group: draft-ci-${{ github.ref || github.run_id }}
  cancel-in-progress: true

jobs:

  lint:
    if: 'github.event.pull_request.draft'
    uses: ./.github/workflows/lint.yml

  hadolint:
    if: 'github.event.pull_request.draft'
    uses: ./.github/workflows/hadolint.yml


  linux-build:
    if: 'github.event.pull_request.draft'
    uses: ./.github/workflows/cmake.yml
    with:
      os: linux
      build_type: release
      artifact_name: linux-release-build
      run_tests: true
      no_artifacts: false

  windows-build:
    if: 'github.event.pull_request.draft'
    uses: ./.github/workflows/cmake.yml
    with:
      os: windows
      build_type: release
      artifact_name: windows-release-build
      run_tests: true
      no_artifacts: false

  # This job configures variables that are useful for other jobs. Other jobs
  # that depend on this one can access the variables via
  # needs.setup-variables.outputs.<variable-name>
  setup-variables:
    if: 'github.event.pull_request.draft'
    runs-on: [self-hosted, linux]
    outputs:
      last_release_ref: ${{ env.last_release_ref }}
      test_ref: ${{ env.test_ref }}
    env:
      last_release_ref: ''
      test_ref: ''
    steps:

      - name: Cleanup workspace (Linux)
        if: always() && runner.os == 'Linux'
        run: sudo rm -rf ..?* .[!.]* *

      # Get ref of last release.

      - name: Checkout PR branch and all history
        uses: actions/checkout@v4
        with:
          path: source
          fetch-depth: 0
          ref: '${{ github.event.pull_request.head.sha }}'

      - name: Get ref of last release
        id: run
        run: |
          cd source
          echo "last_release_ref=$(git describe --abbrev=0 --tags --match=v*)" \
               >> $GITHUB_ENV

      # Get ref of test to be used.  If this is a pull request prefer a branch
      # of the same name as the branch being merged into otherwise try to use a
      # branch of the same name otherwise use main

      - name: Checkout tests from base_ref
        if: github.base_ref
        id: check-tests-from-base_ref
        uses: actions/checkout@v4
        continue-on-error: true
        with:
          repository: ${{ vars.TEST_REPO }}
          token: ${{ secrets.TEST_REPO_TOKEN }}
          path: tests
          fetch-depth: 0
          ref: ${{ github.base_ref }}

      - name: Use tests from base_ref
        if: steps.check-tests-from-base_ref.outcome == 'success'
        id: use-tests-from-base_ref
        run: |
          echo "test_ref=${{ github.base_ref }}" >> $GITHUB_ENV

      - name: Checkout tests from ref_name
        if: steps.check-tests-from-base_ref.outcome != 'success'
        id: check-tests-from-ref_name
        uses: actions/checkout@v4
        continue-on-error: true
        with:
          repository: ${{ vars.TEST_REPO }}
          token: ${{ secrets.TEST_REPO_TOKEN }}
          path: tests
          fetch-depth: 0
          ref: ${{ github.ref_name }}

      - name: Use tests from ref_name
        if: steps.check-tests-from-ref_name.outcome == 'success'
        id: use-tests-from-ref_name
        run: |
          echo "test_ref=${{ github.ref_name }}" >> $GITHUB_ENV

      - name: Use tests from default
        if: >
          steps.check-tests-from-base_ref.outcome != 'success'
          && steps.check-tests-from-ref_name.outcome != 'success'
        run: |
          echo "test_ref=main" >> $GITHUB_ENV

      - name: Report
        if: always()
        run: |
          echo "last_release_ref=${{ env.last_release_ref }}"
          echo "test_ref=${{ env.test_ref }}"

  windows-acceptance:
    if: 'github.event.pull_request.draft'
    needs: [windows-build, setup-variables]
    strategy:
      fail-fast: true
      matrix:
        gpu:
          - gen12.5
        config:
          - release
        os:
          - windows
    uses: ./.github/workflows/acceptance.yml
    secrets: inherit
    with:
      os: ${{ matrix.os }}
      build_type: ${{ matrix.config }}
      artifact_name: ${{ matrix.os }}-${{ matrix.config }}-build
      gpu: ${{ matrix.gpu }}
      distro_family: windows
      distro_version: 11
      test_ref: ${{ needs.setup-variables.outputs.test_ref }}

  linux-acceptance:
    if: 'github.event.pull_request.draft'
    needs: [linux-build, setup-variables]
    strategy:
      fail-fast: true
      matrix:
        gpu:
          - gen12.5
        distro:
          - family: ubuntu
            version: 22.04
        config:
          - release
        os:
          - linux
    uses: ./.github/workflows/acceptance.yml
    secrets: inherit
    with:
      os: ${{ matrix.os }}
      build_type: ${{ matrix.config }}
      artifact_name: ${{ matrix.os }}-${{ matrix.config }}-build
      gpu: ${{ matrix.gpu }}
      distro_family: ${{ matrix.distro.family }}
      distro_version: ${{ matrix.distro.version }}
      test_ref: ${{ needs.setup-variables.outputs.test_ref }}

